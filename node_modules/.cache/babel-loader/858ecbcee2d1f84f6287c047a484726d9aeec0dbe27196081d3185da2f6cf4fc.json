{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5dd84899\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Project\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProjectItem = _resolveComponent(\"ProjectItem\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" \\n         ProjectItem 컴포넌트를 사용하여 프로젝트 항목을 표시합니다. \\n        v-for 디렉티브를 사용하여 projects의 각 항목에 대해 반복하고,\\n         :key로 index를 부여합니다. \\n         :project로 각 프로젝트 데이터를 전달합니다.\\n         \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projects, (item, index) => {\n    return _openBlock(), _createBlock(_component_ProjectItem, {\n      key: index,\n      project: item\n    }, null, 8 /* PROPS */, [\"project\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_Fragment","_renderList","$data","projects","item","index","_createBlock","_component_ProjectItem","key","project"],"sources":["/Users/gubonsang/Documents/Internet Programing/my-app/IP/src/components/Project.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>Project</h2>\n      <!-- \n         ProjectItem 컴포넌트를 사용하여 프로젝트 항목을 표시합니다. \n        v-for 디렉티브를 사용하여 projects의 각 항목에 대해 반복하고,\n         :key로 index를 부여합니다. \n         :project로 각 프로젝트 데이터를 전달합니다.\n         -->\n      <ProjectItem v-for=\"(item, index) in projects\" :key=\"index\" :project=\"item\" />\n    </div>\n\n  </template>\n  \n  <script>\n// ProjectItem.vue 컴포넌트를 import합니다.\nimport ProjectItem from './ProjectItem.vue';\n\n  export default {\n    name: 'ProjectList',\n    // 사용하는 컴포넌트를 등록합니다. ProjectItem 컴포넌트를 사용합니다.\n    components: {\n      ProjectItem\n    },  \n    data(){\n      return {\n        // 사용자의 프로젝트 정보 리스트를 저장합니다.\n        projects: [\n          {\n            title: 'XXX 배달 프로젝트',\n            items: ['Spring, React 기반 배달 앱 프로젝트', '일평균 5000건 주문', '마이크로 서비스 아키텍처, 아파치 카프카를 통한 시스템 설계']\n          },\n          {\n            title: 'XXX 배달 음식 추천 프로젝트',\n            items: ['XXX 배달 앱에서 머신런닝을 활용한 배달 음식 추천', '사용자의 취향을 고려한 배달 음식 추천 알고리즘 설계']\n          },\n          {\n            title: 'XXX 배달 라이더 매칭 프로젝트',\n            items: ['위치기반 배달 라이더 매칭 시스템 개발', '음식 종류에 따라 오토바이, 뚜벅이 라이더 자동 매칭 알고리즘 설계']\n          },\n        ]\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  div {\n    text-align: left;\n  }\n  </style>"],"mappings":";;gEAEMA,mBAAA,CAAgB,YAAZ,SAAO;;;uBADbC,mBAAA,CASM,cARJC,UAAgB,EAChBC,mBAAA,2LAKM,G,kBACNF,mBAAA,CAA8EG,SAAA,QATpFC,WAAA,CAS2CC,KAAA,CAAAC,QAAQ,EATnD,CAS2BC,IAAI,EAAEC,KAAK;yBAAhCC,YAAA,CAA8EC,sBAAA;MAA9BC,GAAG,EAAEH,KAAK;MAAGI,OAAO,EAAEL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}